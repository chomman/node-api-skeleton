version: "2"
services:
  gateway:
    container_name: gateway
    restart: on-failure
    build: ./services/gateway
    ports:
      - "9090:8080"
    environment:
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_USERNAME: root
      MYSQL_PASSWORD: admin
      MYSQL_DATABASE: gwdb
      A_SERVICE_HOST: a_service
      A_SERVICE_PORT: 5000
    links:
      - redis
      - mongo
      - mysql
      - a_service
    depends_on:
      - redis
      - mongo
      - mysql
  a_service:
    container_name: a_service
    restart: on-failure
    build: ./services/a-service
    ports:
      - "3000:5000"
    environment:
      REDIS_HOST: redis
      MONGO_HOST: mongo
      MONGO_PORT: 27017
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_USERNAME: root
      MYSQL_PASSWORD: admin
    links:
      - redis
      - mongo
      - mysql
    depends_on:
      - redis
      - mongo
      - mysql
  redis:
    image: redis
    container_name: cache
    expose:
    - 6379
  mongo:
    container_name: mongo
    image: mongo
    ports:
      - "33944:27017"
  mysql:
    build: ./database/docker/mysql
    container_name: mysql_5.7
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - 3307:3306
  db_migration:
    build: ./database/migrations
    restart: on-failure
    environment:
      NODE_ENV: dev
      MONGO_HOST: mongo
      MYSQL_HOST: mysql
      MYSQL_USERNAME: root
      MYSQL_PASSWORD: admin
    command: ["npm", "run", "dbmigrate:all-up"]
    links:
      - mongo
      - mysql
    depends_on:
      - mongo
      - mysql
